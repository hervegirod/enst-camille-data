plugins {
    id 'org.m2ci.msp.flaml' version '0.3.0'
    id 'de.dfki.mary.voicebuilding.marytts-kaldi-mfa'
    id 'ivy-publish'
}

group 'de.dfki.mary'
version '0.2-SNAPSHOT'
description 'ENST Camille Voice Data'

repositories {
    ivy {
        url 'https://github.com/marytts/enst-camille-data'
        layout 'pattern', {
            ivy 'releases/download/v[revision]/ivy-[revision].xml'
            artifact 'releases/download/v[revision]/[module]-[revision].[ext]'
        }
    }
}

configurations {
    data
}

dependencies {
    data group: 'de.dfki.mary', name: 'enst-camille-data', version: '0.2-rc1', ext: 'flac'
    marytts group: 'de.dfki.mary', name: 'marytts-lang-fr', version: '5.2'
}

task unpackData(type: Copy) {
    from files(configurations.data)
    into buildDir
    rename { "${project.name}.flac" }
}

flaml {
    flacFile = file("$buildDir/${project.name}.flac")
}

task packageYaml(type: Zip) {
    from flaml.yamlFile
}

artifacts {
    'default' packageYaml
    'default' generateFlac.flacFile, {
        builtBy generateFlac
    }
}

extractWavFiles {
    dependsOn unpackData
}

convertTextToMaryXml {
    srcDir = extractTextFiles.destDir
    locale = Locale.FRENCH
}

prepareForcedAlignment {
    wavDir = extractWavFiles.destDir
}

injectSegments {
    labDir = convertTextGridToXLab.destDir
    yamlDestFile = flaml.yamlFile
}

publishing {
    publications {
        flaml(IvyPublication) {
            artifact packageYaml
            artifact generateFlac.flacFile, {
                builtBy generateFlac
            }
            descriptor {
                license {
                    name = 'Creative Commons Attribution-ShareAlike 4.0 International'
                    url = 'https://creativecommons.org/licenses/by-sa/4.0/'
                }
                description {
                    text = project.description
                    homepage = 'https://github.com/marytts/enst-camille-data'
                }
            }
        }
    }
    repositories {
        ivy {
            name 'projectLocal'
            url "$buildDir/repo"
        }
    }
}
